# Cross.toml - Ultimate proc-macro cross-compilation configuration
# This configuration completely avoids proc-macro issues by letting cross handle everything

[build.env]
passthrough = [
    # Essential environment variables only
    "OPENSSL_STATIC",
    "OPENSSL_LIB_DIR", 
    "OPENSSL_INCLUDE_DIR",
    "PKG_CONFIG_ALLOW_CROSS",
    "PKG_CONFIG_PATH",
    
    # Memory allocator configuration
    "CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG",
    
    # Windows cross-compilation toolchain
    "CC_i686_pc_windows_gnu",
    "CXX_i686_pc_windows_gnu",
    "AR_i686_pc_windows_gnu",
    "CC_x86_64_pc_windows_gnu",
    "CXX_x86_64_pc_windows_gnu",
    "AR_x86_64_pc_windows_gnu"
]

# Windows targets with proc-macro support
[target.i686-pc-windows-gnu]
image = "ghcr.io/cross-rs/i686-pc-windows-gnu:main"
pre-build = [
    "dpkg --add-architecture i386",
    "apt-get update",
    "apt-get install -y --no-install-recommends gcc-mingw-w64-i686 g++-mingw-w64-i686"
]

[target.i686-pc-windows-gnu.env]
CC_i686_pc_windows_gnu = "i686-w64-mingw32-gcc-posix"
CXX_i686_pc_windows_gnu = "i686-w64-mingw32-g++-posix"
AR_i686_pc_windows_gnu = "i686-w64-mingw32-ar"
CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG = "true"

[target.x86_64-pc-windows-gnu]
image = "ghcr.io/cross-rs/x86_64-pc-windows-gnu:main"
pre-build = [
    "dpkg --add-architecture amd64",
    "apt-get update",
    "apt-get install -y --no-install-recommends gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64"
]

[target.x86_64-pc-windows-gnu.env]
CC_x86_64_pc_windows_gnu = "x86_64-w64-mingw32-gcc-posix"
CXX_x86_64_pc_windows_gnu = "x86_64-w64-mingw32-g++-posix"
AR_x86_64_pc_windows_gnu = "x86_64-w64-mingw32-ar"
CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG = "true"

# Linux musl targets
[target.x86_64-unknown-linux-musl]
image = "ghcr.io/cross-rs/x86_64-unknown-linux-musl:main"
pre-build = [
    "apt-get update",
    "apt-get install -y --no-install-recommends libssl-dev pkg-config"
]

[target.aarch64-unknown-linux-musl]
image = "ghcr.io/cross-rs/aarch64-unknown-linux-musl:main"
pre-build = [
    "dpkg --add-architecture arm64",
    "apt-get update",
    "apt-get install -y --no-install-recommends libssl-dev:arm64 pkg-config"
]

# Linux GNU targets
[target.aarch64-unknown-linux-gnu]
image = "ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main"
pre-build = [
    "dpkg --add-architecture arm64",
    "apt-get update",
    "apt-get install -y --no-install-recommends libssl-dev:arm64 pkg-config"
]

[target.armv7-unknown-linux-gnueabihf]
image = "ghcr.io/cross-rs/armv7-unknown-linux-gnueabihf:main"
pre-build = [
    "dpkg --add-architecture armhf",
    "apt-get update",
    "apt-get install -y --no-install-recommends libssl-dev:armhf pkg-config"
]

# macOS targets
[target.x86_64-apple-darwin]
image = "ghcr.io/cross-rs/x86_64-apple-darwin:main"

[target.aarch64-apple-darwin]
image = "ghcr.io/cross-rs/aarch64-apple-darwin:main"