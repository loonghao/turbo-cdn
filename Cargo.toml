[package]
name = "turbo-cdn"
version = "0.4.1"
edition = "2021"
authors = ["Hal <hal.long@outlook.com>"]
description = "Intelligent download accelerator with automatic CDN optimization and concurrent chunked downloads"
license = "MIT"
repository = "https://github.com/loonghao/turbo-cdn"
homepage = "https://github.com/loonghao/turbo-cdn"
documentation = "https://docs.rs/turbo-cdn"
readme = "README.md"
keywords = ["download", "cdn", "accelerator", "opensource", "rust"]
categories = [
    "network-programming",
    "web-programming",
    "command-line-utilities",
]
exclude = ["/.github/", "/tests/fixtures/", "/benches/", "*.md"]

# Target-specific configurations for cross-compilation
[target.'cfg(all(not(target_env = "musl"), not(target_os = "windows"), not(target_arch = "arm")))']
# Use mimalloc on supported platforms (x86_64 Linux/macOS with glibc)

[target.'cfg(any(target_env = "musl", target_arch = "arm", target_arch = "aarch64"))']
# Disable mimalloc for musl and ARM targets to avoid compilation issues

[dependencies]
# Async runtime
tokio = { version = "1.0", features = ["full", "fs"] }

# HTTP client - optimized for performance and cross-platform compatibility
reqwest = { version = "0.12", features = [
    "json",
    "stream",
    "rustls-tls",      # Use rustls instead of OpenSSL to avoid build issues
    "gzip",
    "brotli",
    "deflate",
    "http2",           # Enable HTTP/2 support for better performance
    "charset",         # Better charset handling
    "hickory-dns",     # Use hickory-dns (formerly trust-dns) for better DNS resolution
], default-features = false }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# URL handling (updated to fix idna security vulnerability RUSTSEC-2024-0421)
url = "2.5.4"

# Async utilities
futures = "0.3"
futures-util = "0.3"
async-trait = "0.1"

# Progress tracking
indicatif = "0.17"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "fmt", "ansi"] }
tracing-appender = "0.2"
tracing-log = "0.2"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# File system operations
tokio-util = { version = "0.7", features = ["io"] }

# Configuration
figment = { version = "0.10", features = ["toml", "env"] }

# CLI
clap = { version = "4.5", features = ["derive", "color"] }

# Regex
regex = "1.0"

# HTTP client with rustls for better cross-platform compatibility
# Using only reqwest to simplify the project and avoid OpenSSL compilation issues

# Memory optimization and high-performance I/O
# Use mimalloc only on supported platforms to avoid GNU cross-compilation issues
mimalloc = { version = "0.1", optional = true }
memmap2 = "0.9"

# Fast hashing and concurrent data structures
ahash = { version = "0.8", optional = true }
dashmap = "6.0"
once_cell = "1.19"

# DNS resolution and caching (using hickory-dns, the successor to trust-dns)
hickory-resolver = "0.25"
lru = "0.14"

# Compression support
flate2 = "1.0"
brotli = "8.0"

# Network performance monitoring
ping = "0.5"

[dev-dependencies]
# Testing
# Note: tokio-test includes async-stream-impl which can cause proc-macro issues in CI
# Temporarily commented out to avoid proc-macro cross-compilation problems
# tokio-test = "0.4"
tempfile = "3.0"
wiremock = "0.6"
criterion = { version = "0.6", features = ["html_reports"] }
proptest = "1.0"

# Test utilities
pretty_assertions = "1.0"
serial_test = "3.0"

# Cross-compilation tool for proc-macro support
cross = "0.2"

[features]
default = ["rustls-tls", "fast-hash", "high-performance", "mimalloc-allocator"]
rustls-tls = ["reqwest/rustls-tls"]
native-tls = ["reqwest/native-tls"]
fast-hash = ["ahash"]
high-performance = []
# Enable mimalloc only on supported platforms (excludes problematic GNU targets)
mimalloc-allocator = ["mimalloc"]


[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true

[profile.test]
opt-level = 1
debug = true

# Examples
[[example]]
name = "basic_usage"
path = "examples/api/basic_usage.rs"

[[example]]
name = "async_api"
path = "examples/api/async_api.rs"

[[example]]
name = "advanced_config"
path = "examples/api/advanced_config.rs"

[[example]]
name = "vx_integration"
path = "examples/integration/vx_integration.rs"

[[example]]
name = "benchmarks"
path = "examples/performance/benchmarks.rs"

[[example]]
name = "monitoring"
path = "examples/performance/monitoring.rs"
