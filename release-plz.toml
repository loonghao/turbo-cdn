# Release-plz configuration for turbo-cdn
#
# Strategy: release-plz handles crates.io publishing and creates GitHub releases,
# while .github/workflows/release.yml builds cross-platform binaries using upload-rust-binary-action.
#
# Workflow:
# 1. release-plz creates tag (v1.0.0) and GitHub release with changelog
# 2. Tag triggers release.yml workflow for cross-platform binary builds
# 3. upload-rust-binary-action builds and uploads binaries to the existing release
# 4. release-plz publishes to crates.io
#
# This approach leverages release-plz's strengths (version management, changelog, crates.io)
# while using the specialized upload-rust-binary-action for cross-platform builds.

[workspace]
# Enable automatic changelog generation
changelog_update = true
# Disable GitHub releases at workspace level (handled by package level)
git_release_enable = false
# Enable automatic tag creation (triggers release.yml)
git_tag_enable = true
# Enable processing for releases
release = true

# Changelog configuration
[changelog]
header = """
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

"""

# Package-specific configuration for turbo-cdn
[[package]]
name = "turbo-cdn"
# Enable changelog updates
changelog_update = true
# Enable GitHub releases (release-plz creates draft, release.yml adds binaries and publishes)
git_release_enable = true
# Enable processing for releases
release = true
# Standard tag format (triggers release workflows) - with 'v' prefix to trigger release.yml
git_tag_name = "v{{version}}"
# Allow major version bumps for breaking changes
allow_dirty = false
# Ensure proper semantic versioning
semver_check = true
# Create published releases (upload-rust-binary-action will add binaries)
git_release_draft = false
# Custom release body template
git_release_body = """
## ðŸš€ What's Changed

{{changelog}}

## ðŸ“¦ Installation

### Download Binary
Download the appropriate binary for your platform from the assets below.

### Using Cargo
```bash
cargo install turbo-cdn
```

### Using Package Managers
```bash
# Homebrew (macOS/Linux)
brew install loonghao/tap/turbo-cdn

# Scoop (Windows)
scoop bucket add loonghao https://github.com/loonghao/scoop-bucket
scoop install turbo-cdn
```

## ðŸ”— Links
- [Documentation](https://docs.rs/turbo-cdn)
- [Examples](https://github.com/loonghao/turbo-cdn/tree/main/examples)
- [Changelog](https://github.com/loonghao/turbo-cdn/blob/main/CHANGELOG.md)

**Full Changelog**: https://github.com/loonghao/turbo-cdn/compare/{{previous_tag}}...{{version}}
"""
